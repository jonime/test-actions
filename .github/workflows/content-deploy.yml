name: Content deploy
run-name: |
  Content deploy: ${{ github.event.client_payload.env || 'test' }}

on:
  repository_dispatch:
    types: [content-build]

concurrency:
  group: content-deploy-${{ github.event.client_payload.env || 'test' }}

env:
  env: ${{ github.event.client_payload.env || 'test' }}

jobs:
  validate-env:
    name: Validate target environment
    runs-on: ubuntu-latest
    outputs:
      deployAll: ${{ steps.validate.outputs.deployAll }}
    steps:
      - name: Validate "${{ env.env }}"
        id: validate
        uses: actions/github-script@v6
        with:
          script: |
            if (['prod', 'staging'].includes('${{ env.env }}')) {
              core.setOutput('deployAll', 'false');
              return;
            }

            if (['test', 'dev', 'preview'].includes('${{ env.env }}')) {
              core.setOutput('deployAll', 'true');
              return;
            }

            core.setFailed('Invalid env: ${{ env.env }}');

  deploy-changes:
    needs: [validate-env]
    name: Deploy changes
    uses: ./.github/workflows/deploy-changes.yml
    if: success() && needs.validate-env.outputs.deployAll == 'true'
    secrets: inherit
    with:
      env: ${{ github.event.client_payload.env || 'test' }}

  check-deploys:
    name: Check for running deploys
    needs: [validate-env]
    if: success() && needs.validate-env.outputs.deployAll == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Check target environment
        id: check-env
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.git.listWorkflowRuns({
              owner: 'jonime',
              repo: 'test-actions',
              workflow_id: 'update-staging.yml',
              status: 'in_progress',
            });
            console.log(response);

  front-build:
    name: Build frontend (prod/staging)
    needs: [check-deploys]
    uses: ./.github/workflows/front-build.yml
    secrets: inherit
    with:
      ref: environment-${{ github.event.client_payload.env || 'test' }}
      targetEnv: ${{ github.event.client_payload.env || 'test' }}

  front-deploy:
    name: Deploy frontend (prod/staging)
    needs: [check-deploys, front-build]
    uses: ./.github/workflows/front-deploy.yml
    secrets: inherit
    with:
      targetEnv: ${{ github.event.client_payload.env || 'test' }}
