name: Backend - Verify

on:
  workflow_call:

jobs:
  dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node-version.outputs.node-version }}
      nodemodules-cache-key: ${{ steps.nodemodules-cache-key.outputs.nodemodules-cache-key }}

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

  lint:
    name: Lint
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Linter
        run: npm run lint --workspace=back

  find-dead-code:
    name: Unused exports check
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Find unused exports
        run: npm run find-dead-code --workspace=back

  typecheck:
    name: Static type check
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Static typecheck
        run: npm run typescript:check --workspace=back

  test:
    name: Test
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: Tests
        run: npm test --workspace=back

  typegen:
    name: GraphQL type generation
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - name: GraphQL type generation
        run: npm run generate-graphql-types --workspace=back
