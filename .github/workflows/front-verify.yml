name: Frontend - Verify

on:
  workflow_call:

jobs:
  initialize:
    name: Initialize
    uses: ./.github/workflows/initialize.yml
    secrets: inherit

  typecheck:
    name: Type check
    needs: initialize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Run type check
        run: npm run typescript:check --workspace=front

  lint-code:
    name: Lint code
    needs: initialize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Linter for code
        run: npm run lint --workspace=front

  check-issues:
    name: Check issues
    needs: initialize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Prettier
        run: npm run prettier:check --loglevel error

      - name: Linter for CSS
        run: npm run lint:css --workspace=front

      - name: Reimporter
        run: npm run reimporter:check --workspace=front

      - name: SVG checks
        run: npm run svg --quiet --workspace=front

      - name: Check for dead code
        run: npm run find-dead-code --workspace=front

  unit-test:
    name: Unit tests
    needs: initialize
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Subdivide unit tests to several subdivisions to be run in parallel.
        # This relies on a custom Jest test sequencer at tests/setup/jest-division-sequencer.js
        divisions: [3]
        run-division: [1, 2, 3]
        # Test in varying time zones.
        # There's no clean and reliable way to set time zone from within the Jest / NodeJS runtime.
        # Definitions would leak to other tests, causing unwanted side effects.
        # We'll instead boot the whole runtime with Jest several times.
        timezone: ['Europe/Helsinki', 'America/Chicago']

    steps:
      - uses: actions/checkout@v3

      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Run unit tests
        run: TZ='${{ matrix.timezone }}' npm test --workspace=front -- --ci --maxWorkers=2 --no-colors --json --outputFile=jest_results.json --testSequencer=./tests/setup/jest-division-sequencer.js --testDivision=${{ matrix.run-division }},${{ matrix.divisions }}

  cypress-component-tests:
    name: Cypress Component Tests
    needs: initialize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: initialize
        name: Initialize
        uses: ./.github/actions/initialize
        with:
          artifactoryEmail: ${{ secrets.ARTIFACTORY_EMAIL }}
          artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          component: true
          install: false
          record: false
          project: ./packages/front
