name: Deploy

on:
  push:
    branches:
      - main

jobs:
  check-for-changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      frontChanged: ${{ steps.front-changes.outputs.any_changed }}
      backChanged: ${{ steps.back-changes.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for changes in frontend
        id: front-changes
        uses: tj-actions/changed-files@v35
        with:
          files: packages/front/**

      - name: Check for changes in backend
        id: back-changes
        uses: tj-actions/changed-files@v35
        with:
          files: packages/back/**

  check-front:
    needs: [check-for-changes]
    if: needs.check-for-changes.outputs.frontChanged == 'true'
    uses: ./.github/workflows/front-verify.yml

  build-front:
    needs: [check-front]
    uses: ./.github/workflows/front-build.yml

  check-back:
    needs: [check-for-changes]
    if: needs.check-for-changes.outputs.backChanged == 'true'
    uses: ./.github/workflows/back-verify.yml

  build-back:
    needs: [check-back]
    uses: ./.github/workflows/back-build.yml

  deploy-back:
    needs: [build-back, build-front]
    if: |
      always() &&
      contains(needs.*.result, 'success') &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "DEPLOY!"

  deploy-front:
    needs: [deploy-back, build-front]
    if: |
      always() &&
      contains(needs.*.result, 'success') &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "DEPLOY!"
